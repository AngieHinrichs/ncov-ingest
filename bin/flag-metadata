#!/usr/bin/env python3
"""
Creates a list of flagged sequences from the provided metadata TSV in the
Nextstrain exclusions.txt convention. Prints the list to stdout.
"""
import argparse
import numpy as np
import pandas as pd
from pathlib import Path
from datetime import date

def isfloat(value):
  try:
    float(value)
    return True
  except ValueError:
    return False

deviation_cutoff = 12

if __name__ == '__main__':
    base = Path(__file__).resolve().parent.parent

    parser = argparse.ArgumentParser(
        description="Warn about future dates in a metadata TSV file and sequences that don't follow a molecular clock.",
        formatter_class=argparse.RawTextHelpFormatter
    )
    parser.add_argument("metadata",
        nargs="?",
        default=base / "data/gisaid/metadata.tsv",
        help="Location of generated metadata tsv. Defaults to `data/gisaid/metadata.tsv`")
    args = parser.parse_args()

    metadata = pd.read_csv(args.metadata, sep="\t", dtype="string")
    clock_deviation = np.array([float(x) if isfloat(x) else np.nan for x in metadata.clock_deviation])
    metadata.loc[metadata.date > str(date.today()), 'reason'] = '# Collection date in the future'
    metadata.loc[(metadata.date < "2020-03-01") & (metadata.date.str.len() == 10), 'reason'] = '# Collection date prior to March 2020'
    metadata.loc[(clock_deviation < -deviation_cutoff) & (~np.isnan(clock_deviation)), 'reason'] = f'# Strain under diverged <-{deviation_cutoff}'
    metadata.loc[(clock_deviation > deviation_cutoff) & (~np.isnan(clock_deviation)), 'reason'] =  f'# Strain over diverged >{deviation_cutoff}'
    # metadata.loc[(metadata.QC_rare_mutations == "bad"), 'reason'] = '# Strain has failed rare mutation QC'
    flagged_strains = metadata.loc[metadata.reason.notnull()]

    print(flagged_strains[['strain', 'reason']].to_csv(header=False, index=False, sep='\t'))
